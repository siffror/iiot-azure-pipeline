###############################################################################
# Telegraf agent
###############################################################################
[agent]
  interval = "10s"              # how often to gather metrics
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  logfile = ""                  # stdout

###############################################################################
# INPUTS
###############################################################################
# Internal metrics (needed for health comparisons)
[[inputs.internal]]
  # collect_memstats = true     # optional

# MQTT FFT stream -> JSON
[[inputs.mqtt_consumer]]
  servers = ["${MQTT_URL}"]     # e.g. tcp://mosquitto:1883
  topics = ["sensors/vibration_fft/#"]
  qos = 0
  connection_timeout = "30s"
  persistent_session = false
  client_id = "telegraf-fft"
  data_format = "json"          # expects JSON payloads
  # name_override = "fft"       # optional: force measurement name

###############################################################################
# OUTPUTS
###############################################################################
# InfluxDB v2 (writes)
[[outputs.influxdb_v2]]
  urls = ["${INFLUX_URL}"]      # e.g. http://influxdb:8086
  token = "${INFLUX_TOKEN}"
  organization = "${INFLUX_ORG}"  # must match Influx (you set: iiot)
  bucket = "${INFLUX_BUCKET}"     # must match Influx (you set: vibration)
  # timeout = "5s"

# HTTP health endpoint (returns 200 OK when healthy)
[[outputs.health]]
  # listens on container port 8080 (no ingress required)
  service_address = "http://:8080"

  # Optional: mark health as failed (503) if write errors occur
  [[outputs.health.compares]]
    # compare internal write errors from outputs
    field = "write_errors"
    lt = 1                      # FAIL if write_errors >= 1
    namepass = ["internal_write"]
    tagpass = { output = ["influxdb_v2"] }
