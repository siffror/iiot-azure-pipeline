name: iiot-mosquitto-AutoDeploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  RG: "iiot-poc-rg"
  ACA_ENV: "iiot-env-public"
  APP_NAME: "mosquitto"
  IMAGE: "eclipse-mosquitto:2.0"
  YAML_PATH: "infra/iiot-mosquitto.yaml"
  CONF_PATH: "mosquitto/mosquitto.conf"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Preflight OIDC config
        shell: bash
        run: |
          (grep -RniE 'auth-type|creds:' .github/workflows && echo "ERROR: Found legacy auth config" && exit 1) || echo "OK: No creds/auth-type"
          [[ -n "${{ secrets.AZURE_CLIENT_ID }}" ]] || { echo "Missing AZURE_CLIENT_ID"; exit 1; }
          [[ -n "${{ secrets.AZURE_TENANT_ID }}" ]] || { echo "Missing AZURE_TENANT_ID"; exit 1; }
          [[ -n "${{ secrets.AZURE_SUBSCRIPTION_ID }}" ]] || { echo "Missing AZURE_SUBSCRIPTION_ID"; exit 1; }

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Verify Azure context
        run: az account show -o table

      - name: Ensure containerapp extension
        run: az extension add --name containerapp --upgrade

      - name: Upload mosquitto.conf as secret
        shell: bash
        run: |
          test -f "$CONF_PATH" || { echo "Missing $CONF_PATH"; exit 1; }
          az containerapp secret set \
            --name "$APP_NAME" \
            --resource-group "$RG" \
            --secrets "mosquitto.conf=$(cat "$CONF_PATH")"

      - name: Render YAML
        shell: bash
        run: |
          mkdir -p .render
          if grep -q "__IMAGE__" "$YAML_PATH"; then
            sed "s|__IMAGE__|$IMAGE|g" "$YAML_PATH" > .render/mosquitto.containerapp.yaml
          else
            cp "$YAML_PATH" .render/mosquitto.containerapp.yaml
          fi

      - name: Deploy Container App from YAML
        shell: bash
        run: |
          if az containerapp show -g "$RG" -n "$APP_NAME" >/dev/null 2>&1; then
            az containerapp update -g "$RG" -n "$APP_NAME" --yaml .render/mosquitto.containerapp.yaml
          else
            az containerapp create -g "$RG" -n "$APP_NAME" --yaml .render/mosquitto.containerapp.yaml --environment "$ACA_ENV"
          fi
