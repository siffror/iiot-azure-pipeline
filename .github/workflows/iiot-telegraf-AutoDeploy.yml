name: Auto deploy iiot-telegraf

on:
  push:
    branches: [ main ]
    paths:
      - 'telegraf/**'
      - 'infra/iiot-telegraf.yaml'
      - '.github/workflows/iiot-telegraf-AutoDeploy.yml'
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      RG: iiot-poc-rg
      APP: iiot-telegraf
      ENV_NAME: iiot-env-public
      ACR_NAME: iiotpocacr

    steps:
      # 1) Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Azure login via OIDC
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.IIOTFFTSERVICE_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.IIOTFFTSERVICE_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.IIOTFFTSERVICE_AZURE_SUBSCRIPTION_ID }}

      # 3) Ensure the app exists (first run) so we can attach secrets
      - name: Ensure app exists (first run)
        shell: bash
        run: |
          az containerapp show -g "$RG" -n "$APP" >/dev/null 2>&1 || \
          az containerapp create -g "$RG" -n "$APP" \
            --environment "$ENV_NAME" \
            --image mcr.microsoft.com/azuredocs/containerapps-helloworld:latest \
            --ingress internal

      # 3.1) ⛔️ Validate required secret (A-vägen) – kör INTE om SECRET_SOURCE=kv
      - name: Validate required secret
        if: ${{ vars.SECRET_SOURCE != 'kv' }}
        shell: bash
        run: |
          TOK='${{ secrets.INFLUXDB_ADMIN_TOKEN }}'
          if [ -z "$TOK" ]; then
            echo "Missing secret: INFLUXDB_ADMIN_TOKEN"; exit 1
          fi
          echo "INFLUXDB_ADMIN_TOKEN length: ${#TOK}"

      # 4) ⛔️ Sätt app-secrets (A-vägen) – kör INTE om SECRET_SOURCE=kv
      - name: Set app secrets
        if: ${{ vars.SECRET_SOURCE != 'kv' }}
        shell: bash
        run: |
          CLEAN_TOKEN="$(printf '%s' '${{ secrets.INFLUXDB_ADMIN_TOKEN }}' | tr -d '\r\n')"
          az containerapp secret set -g "$RG" -n "$APP" \
            --secrets influxdb-admin-token="$CLEAN_TOKEN"

      # 5) Render YAML tag (__TAG__ -> commit SHA)
      - name: Render YAML tag
        shell: bash
        run: |
          cp infra/iiot-telegraf.yaml infra/iiot-telegraf.rendered.yaml
          sed -i "s|__TAG__|${{ github.sha }}|g" infra/iiot-telegraf.rendered.yaml
          cat infra/iiot-telegraf.rendered.yaml

      # 6) Build container, push to ACR, and deploy to ACA
      - name: Build & Deploy Telegraf (ACA)
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}/telegraf
          dockerfilePath: Dockerfile
          acrName: ${{ env.ACR_NAME }}
          containerAppName: ${{ env.APP }}
          resourceGroup: ${{ env.RG }}
          containerAppEnvironment: ${{ env.ENV_NAME }}
          imageToBuild: ${{ env.ACR_NAME }}.azurecr.io/iiot-telegraf:${{ github.sha }}
          yamlConfigPath: infra/iiot-telegraf.rendered.yaml

      # 6.1) ✅ Pinna env-mappningen till KV-secreten i ACA (ingen skapning av secret)
      - name: Map INFLUX_TOKEN to existing KV-backed secret
        shell: bash
        run: |
          az containerapp update -g "$RG" -n "$APP" \
            --set-env-vars INFLUX_TOKEN=secretref:influxdb-admin-token

      # 7) Clean up old inactive revisions
      - name: Cleanup old inactive revisions
        shell: bash
        run: |
          az containerapp revision list -g "$RG" -n "$APP" \
            --query "[?properties.active==\`false\`].name" -o tsv | \
          xargs -r -I {} az containerapp revision delete -g "$RG" -n "$APP" --revision {} --yes
